// Place all the styles related to the login controller here.
// They will automatically be included in application.css.
// You can use Sass (SCSS) here: http://sass-lang.com/
body{
  font-family: sans-serif;
  background-image: linear-gradient(to right bottom, #022d6b, #2a4485, #465c9f, #6176ba, #7c91d6);
  color: green;
  height: auto;
  padding-bottom: 2rem;
  background-attachment: fixed;
}
.card .header h2{
  margin: 0;
  font-size: 18px;
  font-weight: normal;
  color: #0ef174;
  font-weight: 100;
}
.card .body{
  padding-bottom: 2rem;
  font-size: 14px;
  color: #8bc34a;
  padding: 10px;
}
.card .header{
  color: #fff;
  padding: 20px;
  position: relative;
  border-bottom: 1px solid rgba(204, 204, 204, 0.35);
}
.card .header .header-dropdown{
  position: absolute;
  top: 20px;
  right: 15px;
  list-style: none;
}
.lst{
  background-image: linear-gradient(to left, #3f3f41, #39393a, #323234, #2c2c2d, #262627);
}
.lsttxt{
  color: #fff;
}
.card{
  background-color: #00000020;
}
.Online {
    color:#0bff0b;
}
.Offline {
  animation: color-change 1s infinite;
}
.ON {
    color:#05ff05;
}
.OFF {
  animation: color-change 1s infinite;
}
#notice{
  text-align: center!important;
  --bs-alert-color: #0f5132;
  --bs-alert-bg: #d1e7dd;
  --bs-alert-border-color: #badbcc;

--bs-alert-bg: transparent;
--bs-alert-padding-x: 1rem;
--bs-alert-padding-y: 1rem;
--bs-alert-margin-bottom: 1rem;
--bs-alert-color: inherit;
--bs-alert-border-color: transparent;
--bs-alert-border: 1px solid var(--bs-alert-border-color);
--bs-alert-border-radius: 0.375rem;
position: relative;
padding: var(--bs-alert-padding-y) var(--bs-alert-padding-x);
margin-bottom: var(--bs-alert-margin-bottom);
color: var(--bs-alert-color);
background-color: var(--bs-alert-bg);
border: var(--bs-alert-border);
border-radius: var(--bs-alert-border-radius);
}
@keyframes color-change {
  0% { color: red; }
  50% { color: #9d3b3b; }
  100% { color: red; }
}
.checking,.unchecked {
    color:#FF8C00;
}
.table tbody tr td, .table tbody tr th{
    padding: 10px;
    border-top: 1px solid #eee;
    border-bottom: 1px solid #eee;
    font-weight: 100;
    text-transform: uppercase;
    font-size: 12px;
    background-color: #221d1d6b;
}
.usr{
  color: grey;
  font-size:19px;
  font-weight: bold !important;
  cursor: pointer;
}
.usr:hover{
  color: #fff;
  cursor: pointer;
}
a {
  text-decoration: none;
  font-size: 14px;
  color: #fff;
  font-weight: bold;
}
tr{
  color: #fff;
  font-weight:100;
  font-size: 16px;
}
tbody:hover{
  color: #05ff05 !important;
}
td{
  color: #05ff05;
}
.neon {
  color: #fff;
  text-shadow:
    0 0 5px #fff,
    0 0 10px #fff,
    0 0 20px #fff,
    0 0 40px #0ff,
    0 0 80px #0ff,
    0 0 90px #0ff,
    0 0 100px #0ff,
    0 0 150px #0ff;
    -webkit-animation: blink 3000ms step-end infinite;
    animation: blink 4000ms step-end infinite;
}
@-webkit-keyframes blink { 50% {
  text-shadow:
  0 0 5px #fff,
  0 0 10px #fff,
  0 0 20px #fff,
  0 0 40px #0ff,
  0 0 80px #0ff,
  0 0 90px #0ff,
  0 0 100px #0ff,
  0 0 150px #0ff; }}
    @keyframes blink { 50% {
      text-shadow:
      0 0 5px #fff,
      0 0 10px #fff,
      0 0 40px #0ff,
      0 0 80px #0ff,
      0 0 100px #0ff,}}

.fa-trash {
  color: #ff00005c;
}
.fa-trash:hover{
  color: red;
}
.fa-edit{
  color: #9997976b;
}
.fa-edit:hover{
  color: #fff
}

.fa-arrow-right{
  color: #9997976b;
}
.fa-arrow-right:hover{
  color: #fff
}
.btn1{
  color: #fff !important;
}
.btn-9 {
  --tilt: 40px;

  display: block;
  box-sizing: border-box;
  padding: 5px 25px;
  border-radius: 999px;

  position: relative;
  overflow: hidden;

  color: white !important;
  background: none;

  text-transform: uppercase;
  border: 1px solid currentColor;

  & span {
    font-weight: 900;
    mix-blend-mode: difference;
  }

  &:before,
  &:after {
    content: "";
    z-index: -1;
    width: calc(100% + var(--tilt));
    height: 100%;

    position: absolute;
    top: 0;
    left: calc(-100% - var(--tilt));
    background: white;
    clip-path: polygon(
      0 0,
      calc(100% - var(--tilt)) 0,
      100% 50%,
      calc(100% - var(--tilt)) 100%,
      0 100%
    );
    transition: transform 0.6s;
  }
  &:before {
    left: calc(-100% - var(--tilt));
  }
  &:after {
    left: 100%;
    transform: rotate(180deg);
  }
  &:hover:before {
    transform: translateX(100%);
  }
  &:hover:after {
    transform: rotate(180deg) translateX(100%);
  }
}

.vertical {
  color: transparent;
  background: #666666;
  -webkit-background-clip: text;
  -moz-background-clip: text;
  background-clip: text;
  text-shadow: 0px 3px 3px rgba(255,255,255,0.5);
}
#mynetwork {
    width: 100%;
    height: 100px;
    border: 1px solid lightgray;
}
